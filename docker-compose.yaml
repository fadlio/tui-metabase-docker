version: '3.8'

services:
  db:
    image: postgres:${POSTGRES_IMAGE_TAG}
    restart: ${RESTART_POLICY}
    security_opt:
      - no-new-privileges:true
    pids_limit: 100
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    environment:
      # timezone inside container
      - TZ

      # necessary Postgres options/variables
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - '${POSTGRES_EXPOSE_PORT}:5432'

  metabase:
    build:
      context: .
      dockerfile: 'Dockerfile'
    restart: always
    environment:
      MB_DB_FILE: '${MB_DB_FILE}'
      MB_DB_TYPE: 'postgres'
      MB_DB_DBNAME: '${POSTGRES_DB}'
      MB_DB_PORT: 5432
      MB_DB_USER: '${POSTGRES_USER}'
      MB_DB_HOST: 'db'
      MB_DB_PASS: '${POSTGRES_PASSWORD}'
      JAVA_TIMEZONE: '${TZ}'
    # ports:
    #   # <Port exposed>:<Port running inside container>
    #   - '3000:3000'
    volumes:
      # Volumes where Metabase data will be persisted
      - 'mb-data:/metabase-data'
    depends_on:
      - 'db'

  nginx:
    depends_on:
      - metabase
    container_name: nginx_metabase
    image: nginx:alpine
    restart: ${RESTART_POLICY}
    security_opt:
      - no-new-privileges:true
    pids_limit: 100
    read_only: true
    tmpfs:
      - /var/run
      - /var/cache
      - /var/log/nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/dhparams4096.pem:/dhparams4096.pem
      - ./certs:/certs:ro
    environment:
      # timezone inside container
      - TZ
    ports:
      - ${MB_PORT}:443

volumes:
  db-data:
  mb-data:
